{"version":3,"sources":["component/Feedback/Feedback.module.css","component/Container/Container.module.css","component/Statistics/Statistics.js","component/Notification/Notification.js","component/Section/Section.js","component/Feedback/Feedback.js","component/Container/Container.js","App.js","index.js","component/Section/Section.module.css"],"names":["module","exports","Statistics","this","props","good","neutral","bad","total","positivePercentage","Component","Notification","message","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","map","option","type","btn","onClick","Container","container","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","positivePer","keys","Object","Feedback","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,IAAM,wB,mBCAxBD,EAAOC,QAAU,CAAC,UAAY,+B,kJCExBC,E,4JACJ,WACE,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,e,GAViBC,aAuBVR,ICnBAS,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,gBCe3BC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,6BAAKJ,IACJC,M,iBCHDI,E,4JACJ,WACE,MAAqChB,KAAKC,MAAlCgB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBAEjB,OACE,mCACE,8BACGD,EAAQE,KAAI,SAACC,GACZ,OACE,wBAEEC,KAAK,SACLR,UAAWC,IAAEQ,IACbC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GALIA,c,GAVSb,aA6BfS,I,iBC3BAQ,MAJf,YAAkC,IAAbZ,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEW,UAAlB,SAA8Bb,KCIjCc,E,4MACJC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAmBPc,gBAAkB,SAACE,GACjB,EAAKQ,UAAS,SAACC,GAAD,sBACXT,EAASS,EAAUT,GAAU,O,EAIlCU,mBAAqB,kBACnB,EAAKH,MAAMzB,KAAO,EAAKyB,MAAMxB,QAAU,EAAKwB,MAAMvB,K,EAEpD2B,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKN,MAAMzB,KAAO,EAAK4B,qBAAwB,M,4CAE7D,WACE,IAAMzB,EAAQL,KAAK8B,qBACbI,EAAclC,KAAK+B,kCACzB,EAA+B/B,KAAK2B,MAA5BzB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB+B,EAAOC,OAAOD,KAAKnC,KAAK2B,OAE9B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC0B,EAAD,CAAUpB,QAASkB,EAAMjB,gBAAiBlB,KAAKkB,oBAGjD,cAAC,EAAD,CAASP,MAAM,aAAf,SACGN,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB4B,IAGtB,cAAC,EAAD,CAAczB,QAAQ,+B,GAzDhB6B,IAAM/B,WAiETmB,ICnEfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B9C,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.92ddb9eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Feedback_btn__3YEnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2vuh4\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        <p>Positive feedback: {positivePercentage} %</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Feedback.module.css\";\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    const { options, onLeaveFeedback } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {options.map((option) => {\r\n            return (\r\n              <button\r\n                key={option}\r\n                type=\"button\"\r\n                className={s.btn}\r\n                onClick={() => onLeaveFeedback(option)}\r\n              >\r\n                {option}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\nimport Statistics from \"./component/Statistics/Statistics\";\nimport Notification from \"./component/Notification/Notification\";\nimport Section from \"./component/Section/Section\";\nimport Feedback from \"./component/Feedback/Feedback\";\nimport Container from \"./component/Container/Container\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  // handleGoodIncrement = () => {\n  //   this.setState((prevState) => ({\n  //     good: prevState.good + 1,\n  //   }));\n  // };\n  // handleNeutralIncrement = () => {\n  //   this.setState((prevState) => ({\n  //     neutral: prevState.neutral + 1,\n  //   }));\n  // };\n  // handleBadIncrement = () => {\n  //   this.setState((prevState) => ({\n  //     bad: prevState.bad + 1,\n  //   }));\n  // };\n\n  onLeaveFeedback = (option) => {\n    this.setState((prevState) => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePer = this.countPositiveFeedbackPercentage();\n    const { good, neutral, bad } = this.state;\n    const keys = Object.keys(this.state);\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <Feedback options={keys} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePer}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1PAiQ\"};"],"sourceRoot":""}